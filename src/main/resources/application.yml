spring:
  datasource:
    url: jdbc:mysql://localhost:3306/plit #로컬 데이터베이스
#    url: jdbc:mysql://database-2.c3dpfr0cwcg9.sa-east-1.rds.amazonaws.com:3306/plit
    username: plit
    password: 123456   #로컬 데이터베이스 password
#    password: aws123!!
    driver-class-name: com.mysql.cj.jdbc.Driver

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    cache: false

  jpa:
    hibernate:
      ddl-auto: update  # (개발 중엔 update, 운영은 validate 또는 none)
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  mail:
    host: smtp.gmail.com
    port: 587
    username: doormouse149@gmail.com
    password: cgallkxwwlljtvsn
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: 98c6ee570f82d3e4faafca490db81ca1
            client-secret: f0JZ1EEs9gxNPYJkNE0DQiOCg3ibH6Nv
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            scope:
              - profile_nickname
              - account_email
            client-name: Kakao
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  # ??
logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace
    org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG

riot:
  api:
    key: RGAPI-2614a893-0fa2-48cd-975d-3810b82647c9

# 파일 업로드 경로 설정
custom:
  upload-path:
    qna: ${user.dir}/upload/qna
    clan: ${user.dir}/upload/clan